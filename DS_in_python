# encoding=utf-8

class Node(object):


	def __init__(self, data, p=0):
		self.data = data
		self.next = p



class ListNode(object):


	def __init__(self):
		self.head = None


	def CreatListNode(self, data):
		'''创建链表'''
		self.head = Node(data[0])
		p = self.head
		for item in data[1:]:
			node = Node(item)
			p.next = node
			p = p.next

	def GetLength(self):
		'''获得链表长度'''
		length = 0
		p = self.head
		while p:
			length += 1
			p = p.next
		return length


	def FindItem(self, x):
		'''查找链表中元素，如果找到则返回其位置'''
		p = self.head
		count = 0
		while p:
			if p.data == x:
				print ('\nFind success! Location: ' + str(count))
				p = p.next
				count += 1
			else:
				p = p.next
				count += 1
				print('\nThis time failed!')


	def DT(self, x):
		'''only for test in DELETE'''
		p = self.head
		q = p.next
		if p.data == x:
			self.head = q
			print('Delete Success!')
		elif p.data != x:
			while q:
				if q.data == x:
					q = q.next
					p.next = q
					print("DT SUCCESS! ")
					#break
				else:
					p = p.next
					q = q.next
	

	def Judge(self, x):
		'''判断元素位置是否合法'''
		length = self.GetLength()
		if x < 0 or x > length-1:
			print('Index ERR! ')
			return False
		else:
			return True				
	

	def Increase(self, x, v):
		'''增加一个元素，x为位置'''
		length = self.GetLength()
		count = 0
		p = self.head
		if x < 0 or x > length-1:
			print('Insert Index Error! ')
		else:
			while x != count:
				count += 1
				p = p.next
			q = Node(v)
			if x != 0:
				q.next = p.next
				p.next = q
			else:
				q.next = p
				self.head = q


	def Update(self, x, v):
		'''更新某个位置的元素值'''
		flag = self.Judge(x)
		index = 0
		p = self.head
		if flag:
			while index != x:
				index += 1
				p = p.next
			p.data = v


	def getLength(self):
		'''获得链表长度'''
		p = self.head
		count = 0
		while p:
			count += 1
			p = p.next
		length = count
		print('\nLength is ' + str(length))


	def PrintList(self):
		'''打印输出链表'''
		p = self.head
		while p:
			print p.data,
			p = p.next
		print('\n')

	def Delete(self):
		'''删除整个链表'''
		self.head = None
		self.length = 0



a = [3,6,9,2,5,6,6,6,6]
t1 = ListNode()
t1.CreatListNode(a)
t1.PrintList()
t1.getLength()
t1.FindItem(6)
t1.Increase(0,11)
t1.PrintList()
t1.Update(-1,232)
# t1.DeleteOne(5)
# t1.DeleteItem(2)
#t1.DT(0)
t1.PrintList()
t1.Delete()
t1.PrintList()
